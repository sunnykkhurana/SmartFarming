/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FarmDashBoard;

import javax.swing.*;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

import java.util.HashMap;
import java.util.Map;

public class FarmComponentInsert extends javax.swing.JFrame implements ComponentInsert {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	/**
	 * Creates new form FarmComponentInsert
	 */
	public FarmComponentInsert() {
	}

	public FarmComponentInsert(final FarmInterface par) {
		initComponents();
		this.DashBoard = par;
		this.FarmNode = DashBoard.getNewnode();
		this.log = DashBoard.getLog();
		this.FarmMap = DashBoard.getLogmap();
	}

	/**
	 * This method is called from within the constructor to FarmInitialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */

	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jLabel1 = new javax.swing.JLabel();
		jLabel2 = new javax.swing.JLabel();

		jButton1 = new javax.swing.JButton();

		FName = new javax.swing.JTextField();

		FPrice = new javax.swing.JTextField();
		jComboBox1 = new javax.swing.JComboBox<>();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		jLabel1.setText("Name");

		jLabel2.setText("Price");

		jButton1.setText("Insert");
		jButton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(final java.awt.event.ActionEvent evt) {
				jButton1ActionPerformed(evt);
			}
		});

		jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "FarmItem", "FarmContainer" }));

		final javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
				.createSequentialGroup()
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
								layout.createSequentialGroup().addGap(0, 161, Short.MAX_VALUE).addComponent(jButton1))
						.addGroup(layout.createSequentialGroup().addGap(23, 23, 23)
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addComponent(jLabel1).addComponent(jLabel2)

										.addGroup(layout.createSequentialGroup().addGap(1, 1, 1)))
								.addGap(24, 24, 24)
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)

										.addComponent(FName).addComponent(FPrice,
												javax.swing.GroupLayout.PREFERRED_SIZE, 70,
												javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGap(0, 0, Short.MAX_VALUE)))
				.addContainerGap())
				.addGroup(layout.createSequentialGroup().addContainerGap()
						.addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jLabel1).addComponent(FName, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(18, 18, 18)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jLabel2).addComponent(FPrice, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(18, 18, 18)

						.addComponent(jButton1)));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private boolean isDigitString(final String s) {
		return s.matches("-?[0-9]+\\.?[0-9]*");
	}

	private boolean checkInput() {
		if (!FName.getText().equals("") &&

				!FPrice.getText().equals(""))
			if (isDigitString(FPrice.getText()))
				return true;

		return false;
	}

	private void jButton1ActionPerformed(final java.awt.event.ActionEvent evt) { // save
		// GEN-FIRST:event_jButton1ActionPerformed
		final Map<String, Object> treenodeInfo = DashBoard.getNodemap();

		if (!checkInput())
			JOptionPane.showMessageDialog(null, "Illegal parameter!");
		else if (treenodeInfo.containsKey(FName.getText()))
			JOptionPane.showMessageDialog(null, "Cannot add identical FarmComponentName!");
		else {
			final Farmanalyzer tf = new Farmanalyzer();
			final String objtype = (String) jComboBox1.getSelectedItem();
			final String FarmComponentName = FName.getText();
			final double FarmComponentPrice = Double.parseDouble(FPrice.getText());

			FarmNode = tf.getInstance((String) jComboBox1.getSelectedItem());
			FarmNode.FarmInitialize(FarmComponentName, FarmComponentPrice);
			DashBoard.setNewnode(FarmNode);
			treenodeInfo.put(FarmComponentName,
					(objtype.equals("FarmItem")) ? (FarmItem) FarmNode : (FarmContainer) FarmNode);
			final JTree tree = DashBoard.getTreeWorld();
			final DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) tree.getSelectionPath()
					.getLastPathComponent();
			// implement itemlist
			final FarmContainer FarmParentNode = (FarmContainer) treenodeInfo.get(selectedNode.toString());
			FarmParentNode.getFarmList().add(FarmNode);
			// add string to tree
			final DefaultMutableTreeNode newNode = new DefaultMutableTreeNode(FarmComponentName);
			selectedNode.add(newNode);
			// add to command log
			final String LogMSG = "Add " + objtype + " " + FarmComponentName;
			log.addElement(LogMSG);
			FarmMap.put(LogMSG, new HashMap<>());
			FarmMap.get(LogMSG).put("treenode", selectedNode.getLastChild());
			FarmMap.get(LogMSG).put("obj", FarmNode);
			FarmMap.get(LogMSG).put("FarmParentNode", selectedNode);
			// refresh tree model
			final DefaultTreeModel model = (DefaultTreeModel) tree.getModel();
			model.reload();
			this.dispose();
		}

	}

	/**
	 * @deprecated Use {@link #DashboardItem()} instead
	 */
	@Override
	public void NewScreen() {
		DashboardItem();
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see FarmDashBoard.ComponentInsert#NewScreen()
	 */
	@Override
	public void DashboardItem() {
		this.setVisible(true);
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton jButton1;
	private javax.swing.JComboBox<String> jComboBox1;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JTextField FName;
	private javax.swing.JTextField FPrice;

	private Node FarmNode;
	private FarmInterface DashBoard;
	private DefaultListModel<String> log;
	private Map<String, Map<String, Object>> FarmMap;

	/*
	 * (non-Javadoc)
	 * 
	 * @see FarmDashBoard.ComponentInsert#getNewnode()
	 */
	@Override
	public Node getNewnode() {
		return FarmNode;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see FarmDashBoard.ComponentInsert#setNewnode(FarmDashBoard.Node)
	 */
	@Override
	public void setNewnode(final Node FarmNode) {
		this.FarmNode = FarmNode;
	}

	// End of variables declaration//GEN-END:variables
}
